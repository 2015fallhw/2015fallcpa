<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2015FALL 作業主頁</title><link href="http://coursemdetw.github.io/reveal/" rel="alternate"></link><link href="http://coursemdetw.github.io/reveal/feeds/g3.atom.xml" rel="self"></link><id>http://coursemdetw.github.io/reveal/</id><updated>2016-01-08T12:00:00+08:00</updated><entry><title>G3_w17_1</title><link href="http://coursemdetw.github.io/reveal/G3_w17_1.html" rel="alternate"></link><updated>2016-01-08T12:00:00+08:00</updated><author><name>40423118</name></author><id>tag:coursemdetw.github.io,2016-01-08:reveal/G3_w17_1.html</id><summary type="html">&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="http://brython.info/src/brython_dist.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
# 導入數學模組
import math
# 產生各小球的亂數速度用
import random
# 導入 browser 中的計時器, 建立動畫用
import browser.timer

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

n = 20
# 已知數列內容個數, 先分別與 None 對應
x = [None]*n
y = [None]*n
vy = [None]*n
vx = [None]*n
# 重力加速度, Y 方向向下為正
g = 0.05
# 空氣的黏滯阻尼係數
cor = 3 
# 球的彈力係數
fr = 1.9
# 球的半徑
r = 3

for i in range(n):
    x[i] = 300
    y[i] = 100
    # random.random() 將會產生介於 0 與 1 的浮點亂數
    vx[i] = 2*(random.random()-.5)
    vy[i] = 2*(random.random()-.5)

# 更新第 i 球 Y 座標的運算邏輯
def updateY(i):
    if ((y[i]+r) &lt; height):
        #y = height
        vy[i] += g
    else:
        vy[i] = -vy[i]*cor
        vx[i] *= fr
    y[i] += vy[i]
    if ((y[i]+r) &gt; height):
        y[i] = height-r

# 更新第 i 球 X 座標的運算邏輯
def updateX(i):
    if ((x[i]+r) &gt;= width or (x[i]-r) &lt;= 0):
        vx[i] = -vx[i]*cor
    x[i] += vx[i]
    if ((x[i]+r) &gt; width):
        x[i] = width-r
    elif ((x[i]-r) &lt; 0):
        x[i] = r

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()

# 寫字函式
def text(s):
    ctx.fillStyle = "#ff0000"
    ctx.font = "30px sans-serif"
    ctx.textBaseline = "bottom"
    ctx.fillText(s,0,height)

# 每隔特定時間, 進行動畫繪製
def animate():
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製小球
    ctx.fillStyle = "#000000"
    for i in range(n):
        updateY(i)
        updateX(i)
        circle(x[i],y[i],r)

text("Click me!")

# 畫布點擊後執行的函式
def on_canvas_click(ev):
    browser.timer.set_interval(animate,0)

# 只要使用者點擊在畫布上任何地方, 即執行 on_canvas_click 函式
canvas.bind('click', on_canvas_click, False)
&lt;/script&gt;</summary><category term="G3"></category></entry><entry><title>G3_w15_1</title><link href="http://coursemdetw.github.io/reveal/G3_w15_1.html" rel="alternate"></link><updated>2015-12-25T12:00:00+08:00</updated><author><name>40423119</name></author><id>tag:coursemdetw.github.io,2015-12-25:reveal/G3_w15_1.html</id><summary type="html">&lt;h1&gt;1. Python3 的近端程式開發系統如何建立? 如何啟動?&lt;/h1&gt;
&lt;p&gt;利用fix.bat複製leo安裝擋與start.bat和python.properties到Ana3,並修改start.bat讓leo在近端安裝。&lt;/p&gt;
&lt;h1&gt;2. 目前已經熟悉的 Python3 指令及語法有哪些? 請舉例說明&lt;/h1&gt;
&lt;h1&gt;python指令&lt;/h1&gt;
&lt;p&gt;print列印文字,如:print("hello")&lt;/p&gt;
&lt;p&gt;迴圈指令,例如
for i in range(4):
    print("hello")&lt;/p&gt;
&lt;p&gt;while 當...   ,例如
while X != Y 當X不等於Y&lt;/p&gt;
&lt;p&gt;if 如果...  ,例如
if X==Y   如果X等於Y&lt;/p&gt;
&lt;p&gt;else  其他剩下的&lt;/p&gt;
&lt;p&gt;數列[   ],例如
顏色選項=["R","Y","W"]&lt;/p&gt;
&lt;p&gt;亂數random,例如
標準答案=random.sample(顏色選項,2)
標準答案為顏色選項內亂數選兩個&lt;/p&gt;
&lt;h1&gt;3.請利用流程圖, 簡要說明近端猜數字遊戲與猜顏色遊戲程式碼如何設計與運作&lt;/h1&gt;
&lt;script src="https://www.gliffy.com/diagramEmbed.js" type="text/javascript"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;gliffy_did="9703261";embedGliffy();&lt;/script&gt;

&lt;h1&gt;4.請各組員利用 Brython, 分別在各分組的 pelican 網頁文章中, 繪製一個歡慶耶誕的 2D 圖形&lt;/h1&gt;
&lt;h2&gt;merry&lt;/h2&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="40423117"&gt;40423117&lt;a class="anchor-link" href="#40423117"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/Brython3.2.3-20151122-082712/G1-40423103.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="500" height="510"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 盆栽
ctx.beginPath()
ctx.moveTo(195, 390)
ctx.lineTo(195, 420)
ctx.moveTo(305, 405)
ctx.lineTo(305, 420)
ctx.lineWidth = 8
ctx.strokeStyle = "#381319"
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#5C2230"
ctx.fillRect(160,420,180,30)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#381319"
ctx.fillRect(200,420,50,30)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#381319"
ctx.fillRect(180,450,10,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#5C2230"
ctx.fillRect(190,450,40,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#381319"
ctx.fillRect(230,450,50,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#5C2230"
ctx.fillRect(280,450,50,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#381319"
ctx.fillRect(180,470,30,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#5C2230"
ctx.fillRect(210,470,40,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#381319"
ctx.fillRect(250,470,50,20)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#5C2230"
ctx.fillRect(300,470,30,20)
ctx.stroke()


# 樹
ctx.beginPath()
ctx.moveTo(220, 75)
ctx.lineTo(220, 75)
ctx.lineTo(140, 150)
ctx.lineTo(185, 150)
ctx.lineTo(80, 230)
ctx.lineTo(110, 235)
ctx.lineTo(50, 275)
ctx.lineTo(120, 275)
ctx.lineTo(10, 370)
ctx.lineTo(145, 405)
ctx.lineTo(165, 390)
ctx.lineTo(175, 405)
ctx.lineTo(225, 380)
ctx.lineTo(275, 410)
ctx.lineTo(320, 405)
ctx.lineTo(415, 405)
ctx.lineTo(390, 350)
ctx.lineTo(490, 370)
ctx.lineTo(385, 275)
ctx.lineTo(450, 275)
ctx.lineTo(385, 235)
ctx.lineTo(410, 230)
ctx.lineTo(310, 150)
ctx.lineTo(350, 150)
ctx.lineTo(270, 70)
ctx.lineWidth = 10
ctx.strokeStyle = "#25432D"
ctx.stroke()

# 星星
ctx.beginPath()
ctx.moveTo(240, 5)
ctx.lineTo(225, 30)
ctx.lineTo(200, 30)
ctx.lineTo(215, 50)
ctx.lineTo(200, 85)
ctx.lineTo(240, 70)
ctx.lineTo(280, 85)
ctx.lineTo(260, 50)
ctx.lineTo(280, 30)
ctx.lineTo(250, 30)
ctx.lineTo(240, 5)
ctx.lineWidth = 12
ctx.strokeStyle = "#F2E307"
ctx.stroke()

# 字體
ctx.beginPath()
ctx.fillStyle = "#88A85D"
ctx.font = "23px Dutch801 XBd BT"
ctx.fillText("Merry ",13,28)
ctx.font = "23px Dutch801 XBd BT"
ctx.fillText("Christmas",13,48)
ctx.font = "23px Dutch801 XBd BT"
ctx.fillText("&amp;",13,68)
ctx.font = "23px Dutch801 XBd BT"
ctx.fillText("Happy New ",13,88)
ctx.font = "23px Dutch801 XBd BT"
ctx.fillText("Year ",13,108)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#88A85D"
ctx.font = "12px ScriptS"
ctx.fillText("40423117",390,490)
ctx.stroke()

# 邊框

ctx.beginPath()
grd=ctx.createLinearGradient(0,0,0,500)
grd.addColorStop(1,"#F2E307")
grd.addColorStop(0,"#D98E04")
ctx.lineWidth = 20
ctx.strokeStyle = grd
ctx.moveTo(0,0)
ctx.lineTo(0,500)
ctx.stroke()

ctx.beginPath()
grd=ctx.createLinearGradient(500,0,0,0)
grd.addColorStop(1,"#D98E04")
grd.addColorStop(0,"#D90707")
ctx.strokeStyle = grd
ctx.moveTo(0,0)
ctx.lineTo(500,0)
ctx.stroke()

ctx.beginPath()
grd=ctx.createLinearGradient(0,500,0,0)
grd.addColorStop(1,"#D90707")
grd.addColorStop(0,"#A60505")
ctx.strokeStyle = grd
ctx.moveTo(500,0)
ctx.lineTo(500,500)
ctx.stroke()

ctx.beginPath()
grd=ctx.createLinearGradient(0,0,500,0)
grd.addColorStop(0,"#88A85D")
grd.addColorStop(1,"#25432D")
ctx.strokeStyle = grd
ctx.moveTo(0,510)
ctx.lineTo(500,510)
ctx.stroke()

#禮物
ctx.beginPath()
ctx.fillStyle = "#88A85D"
ctx.fillRect(300,300,60,60)
ctx.stroke()


ctx.beginPath()
ctx.moveTo(300,330)
ctx.lineTo(360,330)

ctx.moveTo(330,300)
ctx.lineTo(330,360)

ctx.moveTo(330,300)
ctx.lineTo(300,275)

ctx.moveTo(330,300)
ctx.lineTo(320,260)

ctx.moveTo(300,275)
ctx.lineTo(322,260)

ctx.moveTo(330,300)
ctx.lineTo(340,260)

ctx.moveTo(330,300)
ctx.lineTo(360, 280)

ctx.moveTo(338,260)
ctx.lineTo(362,280)

ctx.lineWidth = 5
ctx.strokeStyle = "#F2E307"
ctx.stroke()


&lt;/script&gt; 




&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;merry&lt;/h2&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="40423119"&gt;40423119&lt;a class="anchor-link" href="#40423119"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/Brython3.2.3-20151122-082712/G1-40423103.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea1" width="400" height="410"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea1"]
ctx = canvas.getContext("2d")

ctx.beginPath()
ctx.moveTo(140, 60)
ctx.quadraticCurveTo(170, 45, 200, 15)
ctx.moveTo(200, 12)
ctx.quadraticCurveTo(230, 43, 260, 61)
ctx.moveTo(260, 60)
ctx.lineTo(140, 60)

ctx.moveTo(100, 120)
ctx.quadraticCurveTo(150, 95, 180, 60)
ctx.moveTo(220, 60)
ctx.quadraticCurveTo(250, 95, 300, 120)
ctx.moveTo(100, 120)
ctx.lineTo(300, 120)

ctx.moveTo(60, 190)
ctx.quadraticCurveTo(120, 165, 160, 120)
ctx.moveTo(240, 120)
ctx.quadraticCurveTo(280, 165, 340, 190)
ctx.moveTo(60, 190)
ctx.lineTo(340, 190)

ctx.moveTo(20, 270)
ctx.quadraticCurveTo(80, 250, 140, 190)
ctx.moveTo(260, 190)
ctx.quadraticCurveTo(320, 250, 380, 270)
ctx.moveTo(20, 270)
ctx.lineTo(380, 270)

ctx.lineWidth = 3
ctx.strokeStyle = "#008800"
ctx.stroke()

ctx.fillStyle = "#663300"
ctx.fillRect(180,271.5,40,129)

ctx.beginPath()
ctx.fillStyle = "#484891"
ctx.fillRect(260,340,60,60)
ctx.stroke()

ctx.moveTo(260,370)
ctx.lineTo(320,370)

ctx.moveTo(290,340)
ctx.lineTo(290,400)

ctx.moveTo(290,340)
ctx.lineTo(260,320)

ctx.moveTo(290,340)
ctx.lineTo(280,300)

ctx.moveTo(258,321)
ctx.lineTo(282,300)

ctx.moveTo(290,340)
ctx.lineTo(300,300)

ctx.moveTo(290,340)
ctx.lineTo(320,320)

ctx.moveTo(298,300)
ctx.lineTo(322,320)

ctx.lineWidth = 2
ctx.strokeStyle = "#FF8000"
ctx.stroke()

ctx.moveTo(60,370)
ctx.lineTo(160,370)

ctx.moveTo(110,340)
ctx.lineTo(110,400)

ctx.moveTo(111.5,341.5)
ctx.lineTo(100,310)

ctx.moveTo(111.5,341.5)
ctx.lineTo(80,330)

ctx.moveTo(101.5,310)
ctx.lineTo(78.5,330)

ctx.moveTo(111.5,341.5)
ctx.lineTo(140,330)

ctx.moveTo(111.5,341.5)
ctx.lineTo(120,310)

ctx.moveTo(141.5,330)
ctx.lineTo(118.5,310)

ctx.beginPath()


&lt;/script&gt; 


&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2&gt;merry&lt;/h2&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="40423108"&gt;40423108&lt;a class="anchor-link" href="#40423108"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/Brython3.2.3-20151122-082712/40423112.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea2" width="500" height="500"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")

# 開始畫直線
ctx.beginPath()
ctx.lineWidth = 5
ctx.moveTo(250,100)
ctx.lineTo(150,200)
ctx.lineTo(200,200)
ctx.lineTo(100,300)
ctx.lineTo(200,300)
ctx.lineTo(200,400)
ctx.lineTo(300,400)
ctx.lineTo(300,300)
ctx.lineTo(400,300)
ctx.lineTo(300,200)
ctx.lineTo(350,200)
ctx.lineTo(250,100)
ctx.strokeStyle = "#006000"
ctx.stroke()
&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</summary><category term="G3"></category></entry><entry><title>G3_w14_1</title><link href="http://coursemdetw.github.io/reveal/G3_w14_1.html" rel="alternate"></link><updated>2015-12-18T12:00:00+08:00</updated><author><name>40423117</name></author><id>tag:coursemdetw.github.io,2015-12-18:reveal/G3_w14_1.html</id><summary type="html">&lt;p&gt;以下為作業一內容&lt;/p&gt;
&lt;p&gt;利用 iframe 嵌入投影片:&lt;/p&gt;
&lt;iframe src="simplest.html" width="500" height="300"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="simplest.html" target="_blank"&gt;作業一投影片&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;使用 H1 標題&lt;/h1&gt;
&lt;p&gt;文字段落間若要跳行, 必須插入空白行, 否則將會被 Markdown 視為連續的資料&lt;/p&gt;
&lt;p&gt;使用. &lt;em&gt;斜體文字&lt;/em&gt;, &lt;strong&gt;黑體文字&lt;/strong&gt;, 以及 &lt;code&gt;單線文字&lt;/code&gt;. 表列資料可以寫為:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1項說明&lt;/li&gt;
&lt;li&gt;第2項說明&lt;/li&gt;
&lt;li&gt;第3項說明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特別注意 --- 不包括星號 --- 表列文字從第四欄位開始.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引用的內容寫在這裡
主要是以大於的符號開頭.&lt;/p&gt;
&lt;p&gt;其中也可以利用空白行隔開,
整區都是引用內容的範圍.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;em-dash 符號是3個 dashes. 利用兩個 dashes 來連接開始與結束 (ex., "這個禮拜要閱讀章節 12--14"). 3個逗點 ... 則會被轉為 ellipsis.
pelican 可以支援 unicode. ☺&lt;/p&gt;
&lt;h2&gt;H2 標題&lt;/h2&gt;
&lt;p&gt;有數字的表列資料:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第1項&lt;/li&gt;
&lt;li&gt;第2項&lt;/li&gt;
&lt;li&gt;第3項&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;跟前面一樣, 文字從第四個欄位開始.&lt;/p&gt;
&lt;p&gt;程式碼的表達:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# for 重複迴圈 ...
for i in 1 .. 10 { 呼叫特定函式(i) }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這裡也是要空4個 space 鍵. &lt;/p&gt;
&lt;p&gt;除了每一行空4個空白, 也可以使用 delimited 來界定程式碼範圍, 就像這樣:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;define foobar() {
    print(&amp;quot;歡迎進入程式的世界!&amp;quot;)
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(這樣的表達比較容易用來複製程式碼內容).&lt;/p&gt;
&lt;p&gt;python 的程式碼, 可以寫成下列格式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="c"&gt;# 以下會從 0 數到 9&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;# 稍微暫停一下&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下為另外一種嵌入程式碼的方法:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="c"&gt;# 以下會從 0 數到 9&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;# 稍微暫停一下&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;H3 標題&lt;/h3&gt;
&lt;p&gt;以下則為內嵌式的表列法t:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先, 將完成下列元件的設計:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;轉向機構&lt;/li&gt;
&lt;li&gt;煞車系統&lt;/li&gt;
&lt;li&gt;踩踏機構&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接著連繫工業設計部門.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;確定上述元件的各項設計與用料都符合原始設計規格的要求
    查驗表:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;各元件材質
車蓋顏色
機構調校流程
需要熱處理的元件列表
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;完成上述查驗後, 請通知品保部門, 以便接續處理.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;特別注意各階資料都以內縮4個空白鍵來加以區隔, 包含最後一行.&lt;/p&gt;
&lt;p&gt;Markdown 的超文件連結寫法 &lt;a href="http://www.google.com" target="_blank"&gt;連到 Google&lt;/a&gt;, 也可以連到同目錄下的檔案 &lt;a href="cadpbw1.html" target="_blank"&gt;cadpbw1.html&lt;/a&gt;, 也能使用註腳 &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;放入圖檔, 可以直接利用 html 的 img 標註:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/spur.png" width="500" alt="正齒輪繪圖"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;Vimeo 影片嵌入(直接從 Vimeo 影片上的 Share 複製 html 碼):&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/137724068" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/137724068"&gt;Welcome Speech&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程系 KMOL&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;註腳會連結到這裡.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="G3"></category></entry><entry><title>G3_w14_2</title><link href="http://coursemdetw.github.io/reveal/G3_w14_2.html" rel="alternate"></link><updated>2015-12-18T12:00:00+08:00</updated><author><name>40423117</name></author><id>tag:coursemdetw.github.io,2015-12-18:reveal/G3_w14_2.html</id><summary type="html">&lt;p&gt;以下利用 Brython 在網頁寫 Python 繪圖&lt;/p&gt;
&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/Brython3.2.3-20151122-082712/brython.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="300" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 開始畫直線
ctx.beginPath()
ctx.lineWidth = 5
ctx.moveTo(0, 0)
ctx.lineTo(100, 100)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 5
ctx.moveTo(100, 0)
ctx.lineTo(0, 100)
ctx.strokeStyle = "#0000ff"
ctx.stroke()

x = 100
y = 100

# 利用 browser 模組中的 console.log 將資料列印在 console 區, 可以用來確認程式中各變數的值, 用法等同 print
console.log("x 值為"+str(x)+", y 值為"+str(y))

# 利用迴圈畫水平線
for i in range(5):
    ctx.beginPath()
    ctx.lineWidth = 5
    ctx.moveTo(0, 10+i*20)
    ctx.lineTo(100, 10+i*20)
    ctx.strokeStyle = "#0000ff"
    ctx.stroke()
&lt;/script&gt;

&lt;/script&gt;</summary><category term="G3"></category></entry><entry><title>G3 w15-2</title><link href="http://coursemdetw.github.io/reveal/G3_w15_2.html" rel="alternate"></link><updated>2015-09-19T11:41:00+08:00</updated><author><name>40423119</name></author><id>tag:coursemdetw.github.io,2015-09-19:reveal/G3_w15_2.html</id><summary type="html"></summary><category term="w15"></category></entry></feed>